[
  {
    "title": "How to sort an array alphabetically",
    "date": "October 25, 2020",
    "url": "/blog/how-to-sort-an-array-alphabetically",
    "author": "Adam LaCombe",
    "twitter": "adamlacombe",
    "description": "Learn the best method for sorting an array alphabetically.",
    "tags": [
      "Javascript",
      "Performance"
    ],
    "img": "/assets/blog/images/how-to-sort-an-array-alphabetically/CoverImage.png",
    "filePath": "/assets/blog/how-to-sort-an-array-alphabetically.json",
    "srcPath": "./src/blog/how-to-sort-an-array-alphabetically.md",
    "hypertext": [
      "div",
      null,
      [
        "h2",
        {
          "id": "stringlocalecompare"
        },
        "String.localeCompare()"
      ],
      "\n",
      [
        "p",
        null,
        "If you're working with a relatively small array, you could use ",
        [
          "a",
          {
            "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare"
          },
          "localeCompare()"
        ],
        "."
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "typescript"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-typescript"
          },
          [
            "code",
            {
              "class": "language-typescript"
            },
            [
              "span",
              {
                "class": "token keyword"
              },
              "const"
            ],
            " arr ",
            [
              "span",
              {
                "class": "token operator"
              },
              "="
            ],
            " ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "["
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            "\n    name",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "\"Orange\""
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            "\n    name",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "\"Banana\""
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            "\n    name",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "\"Carrot\""
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            "\n    name",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "\"Apple\""
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            "\n",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "]"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ],
            "\n\n",
            [
              "span",
              {
                "class": "token comment"
              },
              "// [{\"name\":\"Apple\"},{\"name\":\"Banana\"},{\"name\":\"Carrot\"},{\"name\":\"Orange\"}]"
            ],
            "\n",
            [
              "span",
              {
                "class": "token builtin"
              },
              "console"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            [
              "span",
              {
                "class": "token function"
              },
              "log"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            "arr",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            [
              "span",
              {
                "class": "token function"
              },
              "sort"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            "a",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            " b",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            " ",
            [
              "span",
              {
                "class": "token operator"
              },
              "=>"
            ],
            " a",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            "name",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            [
              "span",
              {
                "class": "token function"
              },
              "localeCompare"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            "b",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            "name",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ]
          ]
        ],
        "\n  "
      ],
      "\n  ",
      [
        "h2",
        {
          "id": "intlcollator"
        },
        "Intl.Collator()"
      ],
      "\n",
      [
        "p",
        null,
        "If you're working with a large array, I would recommend using ",
        [
          "a",
          {
            "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator"
          },
          "Intl.Collator()"
        ],
        " for performance reasons."
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "typescript"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-typescript"
          },
          [
            "code",
            {
              "class": "language-typescript"
            },
            [
              "span",
              {
                "class": "token keyword"
              },
              "const"
            ],
            " arr ",
            [
              "span",
              {
                "class": "token operator"
              },
              "="
            ],
            " ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "["
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            "\n    name",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "\"Orange\""
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            "\n    name",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "\"Banana\""
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            "\n    name",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "\"Carrot\""
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            "\n    name",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "\"Apple\""
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            "\n",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "]"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ],
            "\n",
            [
              "span",
              {
                "class": "token keyword"
              },
              "const"
            ],
            " collator ",
            [
              "span",
              {
                "class": "token operator"
              },
              "="
            ],
            " ",
            [
              "span",
              {
                "class": "token keyword"
              },
              "new"
            ],
            " ",
            [
              "span",
              {
                "class": "token class-name"
              },
              "Intl"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            [
              "span",
              {
                "class": "token function"
              },
              "Collator"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ],
            "\n\n",
            [
              "span",
              {
                "class": "token comment"
              },
              "// [{\"name\":\"Apple\"},{\"name\":\"Banana\"},{\"name\":\"Carrot\"},{\"name\":\"Orange\"}]"
            ],
            "\n",
            [
              "span",
              {
                "class": "token builtin"
              },
              "console"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            [
              "span",
              {
                "class": "token function"
              },
              "log"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            "arr",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            [
              "span",
              {
                "class": "token function"
              },
              "sort"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            "a",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            " b",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            " ",
            [
              "span",
              {
                "class": "token operator"
              },
              "=>"
            ],
            " collator",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            [
              "span",
              {
                "class": "token function"
              },
              "compare"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            "a",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            "name",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            " b",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            "name",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ]
          ]
        ],
        "\n  "
      ],
      "\n  ",
      [
        "h2",
        {
          "id": "benchmarks"
        },
        "Benchmarks"
      ],
      "\n",
      [
        "h3",
        {
          "id": "1000-strings"
        },
        "1,000 strings"
      ],
      "\n",
      [
        "p",
        null,
        "Here is a ",
        [
          "a",
          {
            "href": "https://jsben.ch/ir0YX"
          },
          "benchmark"
        ],
        " where we're sorting an array of 1,000 strings. As you can see, ",
        [
          "a",
          {
            "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator"
          },
          "Intl.Collator()"
        ],
        " is 25% faster than ",
        [
          "a",
          {
            "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare"
          },
          "localeCompare()"
        ],
        "."
      ],
      "\n",
      [
        "p",
        null,
        [
          "al-img",
          {
            "src": "/assets/blog/images/how-to-sort-an-array-alphabetically/1000-collator-faster.png",
            "alt": "Benchmark 1,000 strings"
          }
        ]
      ],
      "\n",
      [
        "h3",
        {
          "id": "25-strings"
        },
        "25 strings"
      ],
      "\n",
      [
        "p",
        null,
        "Here is a ",
        [
          "a",
          {
            "href": "https://jsben.ch/LJzX9"
          },
          "benchmark"
        ],
        " where we're sorting an array of only 25 strings. In this case, ",
        [
          "a",
          {
            "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare"
          },
          "localeCompare()"
        ],
        " is 13% faster than ",
        [
          "a",
          {
            "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator"
          },
          "Intl.Collator()"
        ],
        "."
      ],
      "\n",
      [
        "p",
        null,
        [
          "al-img",
          {
            "src": "/assets/blog/images/how-to-sort-an-array-alphabetically/25-localeCompare-faster.png",
            "alt": "Benchmark 25 strings"
          }
        ]
      ]
    ]
  },
  {
    "title": "How to pick properties from an interface",
    "date": "October 15, 2020",
    "url": "/blog/typescript-how-to-pick-properties-from-an-interface",
    "author": "Adam LaCombe",
    "twitter": "adamlacombe",
    "description": "Pick is a built-in type which allows you to pick specific properties from an interface.",
    "tags": [
      "TypeScript"
    ],
    "img": "/assets/blog/images/typescript-how-to-pick-some-properties-from-an-interface/main4.png",
    "filePath": "/assets/blog/typescript-how-to-pick-properties-from-an-interface.json",
    "srcPath": "./src/blog/typescript-how-to-pick-properties-from-an-interface.md",
    "hypertext": [
      "div",
      null,
      [
        "p",
        null,
        "You can use the built-in type ",
        [
          "a",
          {
            "href": "https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"
          },
          "Pick"
        ],
        ". ",
        [
          "code",
          null,
          "Pick<MyInterface, \"prop1\" | \"prop2\">"
        ],
        " is a built-in type which allows you to pick specific properties from an interface."
      ],
      "\n",
      [
        "p",
        null,
        "A great use-case would be verifying user credentials. You might have a ",
        [
          "code",
          null,
          "User"
        ],
        " interface such as the following:"
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "typescript"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-typescript"
          },
          [
            "code",
            {
              "class": "language-typescript"
            },
            [
              "span",
              {
                "class": "token keyword"
              },
              "interface"
            ],
            " ",
            [
              "span",
              {
                "class": "token class-name"
              },
              "User"
            ],
            " ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            "\n  id",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token builtin"
              },
              "number"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ],
            "\n  firstName",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token builtin"
              },
              "string"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ],
            "\n  lastName",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token builtin"
              },
              "string"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ],
            "\n  email",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token builtin"
              },
              "string"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ],
            "\n  password",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token builtin"
              },
              "string"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ],
            "\n",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ]
          ]
        ],
        "\n  "
      ],
      "\n  ",
      [
        "p",
        null,
        "Instead of creating a new interface with the ",
        [
          "code",
          null,
          "email"
        ],
        " and ",
        [
          "code",
          null,
          "password"
        ],
        " properties from the ",
        [
          "code",
          null,
          "User"
        ],
        " interface, lets ",
        [
          "code",
          null,
          "Pick"
        ],
        " them! "
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "typescript"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-typescript"
          },
          [
            "code",
            {
              "class": "language-typescript"
            },
            [
              "span",
              {
                "class": "token comment"
              },
              "// without Pick"
            ],
            "\n",
            [
              "span",
              {
                "class": "token keyword"
              },
              "async"
            ],
            " ",
            [
              "span",
              {
                "class": "token keyword"
              },
              "function"
            ],
            " ",
            [
              "span",
              {
                "class": "token function"
              },
              "verifyLoginCredentials"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            "credentials",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            " email",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token builtin"
              },
              "string"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            " password",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token builtin"
              },
              "string"
            ],
            " ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            " ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token comment"
              },
              "// ... ..."
            ],
            "\n",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            "\n\n",
            [
              "span",
              {
                "class": "token comment"
              },
              "// with Pick"
            ],
            "\n",
            [
              "span",
              {
                "class": "token keyword"
              },
              "async"
            ],
            " ",
            [
              "span",
              {
                "class": "token keyword"
              },
              "function"
            ],
            " ",
            [
              "span",
              {
                "class": "token function"
              },
              "verifyLoginCredentials"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            "credentials",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " Pick",
            [
              "span",
              {
                "class": "token operator"
              },
              "<"
            ],
            "User",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "\"email\""
            ],
            " ",
            [
              "span",
              {
                "class": "token operator"
              },
              "|"
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "\"password\""
            ],
            [
              "span",
              {
                "class": "token operator"
              },
              ">"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            " ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token keyword"
              },
              "const"
            ],
            " user ",
            [
              "span",
              {
                "class": "token operator"
              },
              "="
            ],
            " ",
            [
              "span",
              {
                "class": "token keyword"
              },
              "await"
            ],
            " ",
            [
              "span",
              {
                "class": "token function"
              },
              "getUserByEmail"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            "credentials",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            "email",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ],
            "\n\n  ",
            [
              "span",
              {
                "class": "token keyword"
              },
              "if"
            ],
            " ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            [
              "span",
              {
                "class": "token operator"
              },
              "!"
            ],
            [
              "span",
              {
                "class": "token function"
              },
              "passwordMatches"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            "credentials",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            "password",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            " user",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            "password",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            " ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            "\n    ",
            [
              "span",
              {
                "class": "token keyword"
              },
              "throw"
            ],
            " ",
            [
              "span",
              {
                "class": "token keyword"
              },
              "new"
            ],
            " ",
            [
              "span",
              {
                "class": "token class-name"
              },
              "BadRequestError"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            [
              "span",
              {
                "class": "token string"
              },
              "'incorrect password'"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            "\n\n  ",
            [
              "span",
              {
                "class": "token keyword"
              },
              "return"
            ],
            " user",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ],
            "\n",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            "\n\n",
            [
              "span",
              {
                "class": "token function"
              },
              "verifyLoginCredentials"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            " email",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "\"example@example.com\""
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            " password",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "\"123\""
            ],
            " ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ]
          ]
        ],
        "\n  "
      ]
    ]
  },
  {
    "title": "How to convert images to AVIF in NodeJS",
    "date": "September 7, 2020",
    "url": "/blog/how-to-convert-images-to-avif-in-nodejs",
    "author": "Adam LaCombe",
    "twitter": "adamlacombe",
    "description": "AVIF is the latest next-gen image compression format. Learn how to convert images to AVIF using the Sharp library.",
    "tags": [
      "AVIF",
      "NodeJS",
      "Sharp"
    ],
    "img": "/assets/blog/images/how-to-convert-images-to-avif-in-nodejs/main.png",
    "filePath": "/assets/blog/how-to-convert-images-to-avif-in-nodejs.json",
    "srcPath": "./src/blog/how-to-convert-images-to-avif-in-nodejs.md",
    "hypertext": [
      "div",
      null,
      [
        "h2",
        {
          "id": "what-is-avif-and-why-should-i-be-using-it"
        },
        "What is AVIF and why should I be using it?"
      ],
      "\n",
      [
        "p",
        null,
        "AVIF is the latest next-gen image compression format. It offers significant file size reduction for images compared with JPEG ( ~50% ) or WebP ( ~20% ). Chrome recently shipped support for ",
        [
          "a",
          {
            "href": "https://www.chromestatus.com/feature/4905307790639104#status"
          },
          "AVIF in Chrome 85"
        ],
        " and it can be enabled in ",
        [
          "a",
          {
            "href": "https://bugzilla.mozilla.org/show_bug.cgi?id=1443863"
          },
          "Firefox"
        ],
        " via the ",
        [
          "code",
          null,
          "image.avif.enabled"
        ],
        " flag in ",
        [
          "code",
          null,
          "about:config"
        ],
        "."
      ],
      "\n",
      [
        "p",
        null,
        "Take a look at this ",
        [
          "a",
          {
            "href": "https://netflixtechblog.com/avif-for-next-generation-image-coding-b1d75675fe4"
          },
          "blog post"
        ],
        " published by ",
        [
          "strong",
          null,
          "Netflix"
        ],
        " if you're looking for a more in-depth comparison."
      ],
      "\n",
      [
        "h2",
        {
          "id": "how-can-i-convert-my-images-to-avif"
        },
        "How can I convert my images to AVIF?"
      ],
      "\n",
      [
        "p",
        null,
        [
          "a",
          {
            "href": "https://squoosh.app/"
          },
          "Squoosh"
        ],
        " recently ",
        [
          "a",
          {
            "href": "https://github.com/GoogleChromeLabs/squoosh/pull/722"
          },
          "shipped support"
        ],
        " for AVIF if you don't mind manually converting your images."
      ],
      "\n",
      [
        "p",
        null,
        "If you're looking for a more automated method, you could try using ",
        [
          "a",
          {
            "href": "https://github.com/lovell/sharp"
          },
          "Sharp"
        ],
        ". \nSharp offers ",
        [
          "a",
          {
            "href": "https://sharp.pixelplumbing.com/api-output#heif"
          },
          "support for AVIF"
        ],
        " although it is currently experimental. "
      ],
      "\n",
      [
        "p",
        null,
        "Unfortunately, Sharp's prebuilt binaries do not support AVIF, so you will have to compile ",
        [
          "code",
          null,
          "libvips"
        ],
        " with support for ",
        [
          "code",
          null,
          "libheif"
        ],
        " before you can start taking advantage of this \"experimental\" feature."
      ],
      "\n",
      [
        "p",
        null,
        "To simplify this process I created a ",
        [
          "a",
          {
            "href": "https://github.com/adamlacombe/sharp-image-proxy/blob/master/Dockerfile"
          },
          "Dockerfile"
        ],
        " that I'm using in ",
        [
          "a",
          {
            "href": "https://github.com/adamlacombe/sharp-image-proxy"
          },
          "sharp-image-proxy"
        ],
        "."
      ],
      "\n",
      [
        "p",
        null,
        [
          "repo-card",
          {
            "name": "adamlacombe/sharp-image-proxy"
          }
        ]
      ],
      "\n",
      [
        "p",
        null,
        "If you aren't familiar with Docker, I suggest you read my post: ",
        [
          "a",
          {
            "href": "/blog/introduction-to-docker"
          },
          "Introduction to Docker"
        ],
        "."
      ],
      "\n",
      [
        "p",
        null,
        "Once you have ",
        [
          "code",
          null,
          "libvips"
        ],
        " installed and compiled with support for ",
        [
          "code",
          null,
          "libheif"
        ],
        " you can start using the Sharp API. "
      ],
      "\n",
      [
        "p",
        null,
        "Here's an example of how you can convert a png to avif:"
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "typescript"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-typescript"
          },
          [
            "code",
            {
              "class": "language-typescript"
            },
            [
              "span",
              {
                "class": "token keyword"
              },
              "import"
            ],
            " ",
            [
              "span",
              {
                "class": "token operator"
              },
              "*"
            ],
            " ",
            [
              "span",
              {
                "class": "token keyword"
              },
              "as"
            ],
            " sharp ",
            [
              "span",
              {
                "class": "token keyword"
              },
              "from"
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "'sharp'"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ],
            "\n\n",
            [
              "span",
              {
                "class": "token function"
              },
              "sharp"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            [
              "span",
              {
                "class": "token string"
              },
              "'input.png'"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            [
              "span",
              {
                "class": "token function"
              },
              "toFormat"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            [
              "span",
              {
                "class": "token string"
              },
              "'heif'"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            " ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "{"
            ],
            " quality",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token number"
              },
              "30"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            " compression",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ",
            [
              "span",
              {
                "class": "token string"
              },
              "'av1'"
            ],
            " ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "}"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            [
              "span",
              {
                "class": "token function"
              },
              "toFile"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            [
              "span",
              {
                "class": "token string"
              },
              "'output.avif'"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            "\n  ",
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            [
              "span",
              {
                "class": "token function"
              },
              "then"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            "info ",
            [
              "span",
              {
                "class": "token operator"
              },
              "=>"
            ],
            " ",
            [
              "span",
              {
                "class": "token builtin"
              },
              "console"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "."
            ],
            [
              "span",
              {
                "class": "token function"
              },
              "log"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            "info",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ";"
            ]
          ]
        ],
        "\n  "
      ]
    ]
  },
  {
    "title": "Introduction to Docker",
    "date": "August 28, 2020",
    "url": "/blog/introduction-to-docker",
    "author": "Adam LaCombe",
    "twitter": "adamlacombe",
    "description": "This is a basic introduction to Docker. You'll learn what docker is, how to install it, build images and run containers.",
    "tags": [
      "docker",
      "containers"
    ],
    "img": "/assets/blog/images/introduction-to-docker/docker-commands.jpg",
    "filePath": "/assets/blog/introduction-to-docker.json",
    "srcPath": "./src/blog/introduction-to-docker.md",
    "hypertext": [
      "div",
      null,
      [
        "h1",
        {
          "id": "what-is-docker"
        },
        "What is Docker?"
      ],
      "\n",
      [
        "p",
        null,
        "Docker allows developers to run their applications in a predefined environment. Have you ever heard the phrase ",
        [
          "code",
          null,
          "It works on my machine"
        ],
        "? "
      ],
      "\n",
      [
        "p",
        null,
        [
          "al-img",
          {
            "src": "/assets/blog/images/introduction-to-docker/it-works-on-my-machine.jpg",
            "alt": "It works on my machine"
          }
        ]
      ],
      "\n",
      [
        "p",
        null,
        "Well, no more! You can write a Dockerfile that packages up all the dependencies and configurations someone might need to run your application. "
      ],
      "\n",
      [
        "p",
        null,
        "Docker is ",
        [
          "a",
          {
            "href": "https://github.com/docker/docker-ce"
          },
          "open-source"
        ],
        " software so anyone can contribute to its development."
      ],
      "\n",
      [
        "h1",
        {
          "id": "terms"
        },
        "Terms"
      ],
      "\n",
      [
        "p",
        null,
        "Here are a few terms along with my definition. You can find a more detailed glossary on ",
        [
          "a",
          {
            "href": "https://docs.docker.com/glossary/"
          },
          "Docker docs"
        ],
        "."
      ],
      "\n",
      [
        "h2",
        {
          "id": "dockerfile"
        },
        "Dockerfile"
      ],
      "\n",
      [
        "p",
        null,
        "A text file that contains all the commands/instructions to build an ",
        [
          "em",
          null,
          "image"
        ],
        ". You can think of this as a template."
      ],
      "\n",
      [
        "h2",
        {
          "id": "image"
        },
        "image"
      ],
      "\n",
      [
        "p",
        null,
        "The result of building a ",
        [
          "em",
          null,
          "Dockerfile"
        ],
        " (",
        [
          "code",
          null,
          "docker build -t my_image_name ."
        ],
        "). You can think of this as your compiled template."
      ],
      "\n",
      [
        "h2",
        {
          "id": "container"
        },
        "container"
      ],
      "\n",
      [
        "p",
        null,
        "An instance of an ",
        [
          "em",
          null,
          "image"
        ],
        " (",
        [
          "code",
          null,
          "docker run --name my_instance my_image_name"
        ],
        ")"
      ],
      "\n",
      [
        "h2",
        {
          "id": "entrypoint"
        },
        "ENTRYPOINT"
      ],
      "\n",
      [
        "p",
        null,
        "The command that's run within the ",
        [
          "em",
          null,
          "container"
        ],
        " once the ",
        [
          "em",
          null,
          "container"
        ],
        " starts."
      ],
      "\n",
      [
        "h2",
        {
          "id": "volume"
        },
        "volume"
      ],
      "\n",
      [
        "p",
        null,
        "Directory on your host machine that can be mapped to a location within your container (",
        [
          "code",
          null,
          "docker run --name my_instance -v /home/adam/my-project:/var/www/html my_image_name"
        ],
        ")"
      ],
      "\n",
      [
        "h1",
        {
          "id": "installing-docker"
        },
        "Installing Docker"
      ],
      "\n",
      [
        "p",
        null,
        "Instead of walking you through the installation steps for each operating system, I'll refer you to the official Docker documentation:"
      ],
      "\n",
      [
        "ul",
        null,
        "\n",
        [
          "li",
          null,
          [
            "a",
            {
              "href": "https://docs.docker.com/docker-for-windows/install/"
            },
            "Windows - 10 Pro, Enterprise, or Education (Build 16299 or later)"
          ]
        ],
        "\n",
        [
          "li",
          null,
          [
            "a",
            {
              "href": "https://docs.docker.com/docker-for-windows/install-windows-home/"
            },
            "Windows - 10 Home"
          ]
        ],
        "\n",
        [
          "li",
          null,
          [
            "a",
            {
              "href": "https://docs.docker.com/docker-for-mac/install/"
            },
            "Mac"
          ]
        ],
        "\n",
        [
          "li",
          null,
          [
            "a",
            {
              "href": "https://docs.docker.com/engine/install/ubuntu/"
            },
            "Ubuntu"
          ]
        ],
        "\n"
      ],
      "\n",
      [
        "h1",
        {
          "id": "getting-started"
        },
        "Getting started"
      ],
      "\n",
      [
        "p",
        null,
        "Now that you have Docker installed on your host machine you can start creating containers! "
      ],
      "\n",
      [
        "p",
        null,
        "Let's run an instance of ",
        [
          "a",
          {
            "href": "https://hub.docker.com/_/hello-world"
          },
          "hello-world"
        ],
        ":"
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "bash"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-bash"
          },
          [
            "code",
            {
              "class": "language-bash"
            },
            "docker run hello-world"
          ]
        ],
        "\n  "
      ],
      "\n  ",
      [
        "p",
        null,
        [
          "al-img",
          {
            "src": "/assets/blog/images/introduction-to-docker/docker-run-hello-world.png",
            "alt": "Run hello-world"
          }
        ]
      ],
      "\n",
      [
        "h1",
        {
          "id": "creating-an-image"
        },
        "Creating an image"
      ],
      "\n",
      [
        "p",
        null,
        "The purpose of this image will be to run a simple Apache server."
      ],
      "\n",
      [
        "p",
        null,
        "To create an image you'll need to write a Dockerfile, to do that make a new file, and name it ",
        [
          "code",
          null,
          "Dockerfile"
        ],
        " (no file extension)."
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "Dockerfile"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-Dockerfile"
          },
          [
            "code",
            {
              "class": "language-Dockerfile"
            },
            "FROM ubuntu:latest\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install apache2\n\nEXPOSE 80\n\nCMD /usr/sbin/apache2ctl -D FOREGROUND"
          ]
        ],
        "\n  "
      ],
      "\n  ",
      [
        "p",
        null,
        "Now run the following command to build your image:"
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "bash"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-bash"
          },
          [
            "code",
            {
              "class": "language-bash"
            },
            "docker build -t simple-apache-server ",
            [
              "span",
              {
                "class": "token builtin class-name"
              },
              "."
            ]
          ]
        ],
        "\n  "
      ],
      "\n  ",
      [
        "p",
        null,
        "You should see the following output:"
      ],
      "\n",
      [
        "p",
        null,
        [
          "al-img",
          {
            "src": "/assets/blog/images/introduction-to-docker/docker-build-simple-apache-server.png",
            "alt": "build simple-apache-server"
          }
        ]
      ],
      "\n",
      [
        "h1",
        {
          "id": "running-a-container"
        },
        "Running a container"
      ],
      "\n",
      [
        "p",
        null,
        "Now that you've built an image, let's run an instance of it."
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "bash"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-bash"
          },
          [
            "code",
            {
              "class": "language-bash"
            },
            "docker run -d --name my-apache-container -p ",
            [
              "span",
              {
                "class": "token number"
              },
              "3338"
            ],
            ":80 simple-apache-server"
          ]
        ],
        "\n  "
      ],
      "\n  ",
      [
        "p",
        null,
        "Navigate to ",
        [
          "a",
          {
            "href": "http://localhost:3338"
          },
          "localhost:3338"
        ],
        " in your browser and you should see the default apache page!"
      ],
      "\n",
      [
        "p",
        null,
        [
          "al-img",
          {
            "src": "/assets/blog/images/introduction-to-docker/apache-default-page.png",
            "alt": "default Apache page"
          }
        ]
      ],
      "\n",
      [
        "h3",
        {
          "id": "an-explanation-of-the-different-arguments-used-in-the-command-above"
        },
        "An explanation of the different arguments used in the command above:"
      ],
      "\n",
      [
        "ul",
        null,
        "\n",
        [
          "li",
          null,
          [
            "code",
            null,
            "-d"
          ],
          " will run the container in the background and print its container ID."
        ],
        "\n",
        [
          "li",
          null,
          [
            "code",
            null,
            "-p"
          ],
          " will publish the container's port to the host. ",
          [
            "code",
            null,
            "HOST_PORT"
          ],
          ":",
          [
            "code",
            null,
            "CONTAINER_PORT"
          ]
        ],
        "\n",
        [
          "li",
          null,
          [
            "code",
            null,
            "--name"
          ],
          " lets you assign a name to the container."
        ],
        "\n"
      ],
      "\n",
      [
        "h1",
        {
          "id": "helpful-commands"
        },
        "Helpful commands"
      ],
      "\n",
      [
        "h2",
        {
          "id": "list-the-images-youve-built"
        },
        "List the images you've built"
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "bash"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-bash"
          },
          [
            "code",
            {
              "class": "language-bash"
            },
            "docker images"
          ]
        ],
        "\n  "
      ],
      "\n  ",
      [
        "h2",
        {
          "id": "list-running-containers"
        },
        "List running containers"
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "bash"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-bash"
          },
          [
            "code",
            {
              "class": "language-bash"
            },
            "docker ",
            [
              "span",
              {
                "class": "token function"
              },
              "ps"
            ]
          ]
        ],
        "\n  "
      ],
      "\n  ",
      [
        "h2",
        {
          "id": "list-all-containers-running-and-stopped"
        },
        "List all containers (running and stopped)"
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "bash"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-bash"
          },
          [
            "code",
            {
              "class": "language-bash"
            },
            "docker ",
            [
              "span",
              {
                "class": "token function"
              },
              "ps"
            ],
            " -a"
          ]
        ],
        "\n  "
      ],
      "\n  ",
      [
        "h2",
        {
          "id": "remove-a-container"
        },
        "Remove a container"
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "bash"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-bash"
          },
          [
            "code",
            {
              "class": "language-bash"
            },
            "docker ",
            [
              "span",
              {
                "class": "token function"
              },
              "rm"
            ],
            " CONTAINER_NAME"
          ]
        ],
        "\n  "
      ],
      "\n  ",
      [
        "h2",
        {
          "id": "stop-a-container"
        },
        "Stop a container"
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "bash"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-bash"
          },
          [
            "code",
            {
              "class": "language-bash"
            },
            "docker stop CONTAINER_NAME"
          ]
        ],
        "\n  "
      ],
      "\n  ",
      [
        "h2",
        {
          "id": "start-a-container"
        },
        "Start a container"
      ],
      "\n\n  ",
      [
        "highlight-code",
        {
          "language": "bash"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-bash"
          },
          [
            "code",
            {
              "class": "language-bash"
            },
            "docker start CONTAINER_NAME"
          ]
        ],
        "\n  "
      ],
      "\n  ",
      [
        "h2",
        {
          "id": "bash-into-a-running-container"
        },
        "\"bash into\" a running container"
      ],
      "\n",
      [
        "iframe",
        {
          "src": "https://giphy.com/embed/dtfUJxOTqhHO",
          "frameborder": "0",
          "class": "giphy-embed",
          "allowfullscreen": ""
        }
      ],
      "\n\n\n  ",
      [
        "highlight-code",
        {
          "language": "bash"
        },
        "\n    ",
        [
          "pre",
          {
            "class": "language-bash"
          },
          [
            "code",
            {
              "class": "language-bash"
            },
            "docker ",
            [
              "span",
              {
                "class": "token builtin class-name"
              },
              "exec"
            ],
            " -it CONTAINER_NAME ",
            [
              "span",
              {
                "class": "token function"
              },
              "bash"
            ]
          ]
        ],
        "\n  "
      ]
    ]
  }
]